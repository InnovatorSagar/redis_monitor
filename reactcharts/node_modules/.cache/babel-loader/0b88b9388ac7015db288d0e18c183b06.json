{"ast":null,"code":"import _objectSpread from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/src/Components/changeValue.js\";\nimport React, { Component } from \"react\";\nimport Performance from \"./Performance\";\nimport NavBar from \"./Nav\";\nimport io from \"socket.io-client\";\n\nvar ChangeValue =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChangeValue, _Component);\n\n  function ChangeValue(props) {\n    var _this;\n\n    _classCallCheck(this, ChangeValue);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChangeValue).call(this, props));\n    _this.state = {\n      lineChartData: {\n        labels: [],\n        datasets: [{\n          type: \"line\",\n          label: \"Performance of System\",\n          backgroundColor: \"rgba(0, 0, 0, 0)\",\n          borderWidth: \"2\",\n          lineTension: 0.45,\n          data: []\n        }]\n      },\n      lineChartOptions: {\n        responsive: true,\n        maintainAspectRatio: false\n      },\n      memory: null\n    };\n    return _this;\n  }\n\n  _createClass(ChangeValue, [{\n    key: \"change\",\n    value: function change(memory) {\n      this.setState(function (prevState) {\n        return {\n          memory: memory\n        };\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(\"ehrkwhgirgo\");\n      var socket = io.connect(\"http://localhost:4001\");\n      socket.on(\"message2\", function (data) {\n        _this2.interval = setInterval(function () {\n          _this2.change(data);\n\n          var oldBtcDataSet = _this2.state.lineChartData.datasets[0];\n\n          var newBtcDataSet = _objectSpread({}, oldBtcDataSet);\n\n          newBtcDataSet.data.push(_this2.state.memory);\n\n          var newChartData = _objectSpread({}, _this2.state.lineChartData, {\n            datasets: [newBtcDataSet],\n            labels: _this2.state.lineChartData.labels.concat(new Date().toLocaleTimeString())\n          });\n\n          _this2.setState({\n            lineChartData: newChartData\n          });\n        }, 1000);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(NavBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), \"memory: \", this.state.memory, React.createElement(Performance, {\n        data: this.state.lineChartData,\n        options: this.state.lineChartOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ChangeValue;\n}(Component);\n\nexport default ChangeValue;","map":{"version":3,"sources":["/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/src/Components/changeValue.js"],"names":["React","Component","Performance","NavBar","io","ChangeValue","props","state","lineChartData","labels","datasets","type","label","backgroundColor","borderWidth","lineTension","data","lineChartOptions","responsive","maintainAspectRatio","memory","setState","prevState","console","log","socket","connect","on","interval","setInterval","change","oldBtcDataSet","newBtcDataSet","push","newChartData","concat","Date","toLocaleTimeString"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,OAAnB;AACA,OAAOC,EAAP,MAAe,kBAAf;;IAEMC,W;;;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE;AACbC,QAAAA,MAAM,EAAE,EADK;AAEbC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,IAAI,EAAE,MADR;AAEEC,UAAAA,KAAK,EAAE,uBAFT;AAGEC,UAAAA,eAAe,EAAE,kBAHnB;AAIEC,UAAAA,WAAW,EAAE,GAJf;AAKEC,UAAAA,WAAW,EAAE,IALf;AAMEC,UAAAA,IAAI,EAAE;AANR,SADQ;AAFG,OADJ;AAcXC,MAAAA,gBAAgB,EAAE;AAChBC,QAAAA,UAAU,EAAE,IADI;AAEhBC,QAAAA,mBAAmB,EAAE;AAFL,OAdP;AAkBXC,MAAAA,MAAM,EAAE;AAlBG,KAAb;AAFiB;AAsBlB;;;;2BAEMA,M,EAAQ;AACb,WAAKC,QAAL,CAAc,UAAAC,SAAS;AAAA,eAAK;AAC1BF,UAAAA,MAAM,EAAEA;AADkB,SAAL;AAAA,OAAvB;AAGD;;;wCAEmB;AAAA;;AAClBG,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,UAAIC,MAAM,GAAGrB,EAAE,CAACsB,OAAH,CAAW,uBAAX,CAAb;AAEAD,MAAAA,MAAM,CAACE,EAAP,CAAU,UAAV,EAAsB,UAAAX,IAAI,EAAI;AAC5B,QAAA,MAAI,CAACY,QAAL,GAAgBC,WAAW,CAAC,YAAM;AAChC,UAAA,MAAI,CAACC,MAAL,CAAYd,IAAZ;;AACA,cAAMe,aAAa,GAAG,MAAI,CAACxB,KAAL,CAAWC,aAAX,CAAyBE,QAAzB,CAAkC,CAAlC,CAAtB;;AACA,cAAMsB,aAAa,qBAAQD,aAAR,CAAnB;;AACAC,UAAAA,aAAa,CAAChB,IAAd,CAAmBiB,IAAnB,CAAwB,MAAI,CAAC1B,KAAL,CAAWa,MAAnC;;AAEA,cAAMc,YAAY,qBACb,MAAI,CAAC3B,KAAL,CAAWC,aADE;AAEhBE,YAAAA,QAAQ,EAAE,CAACsB,aAAD,CAFM;AAGhBvB,YAAAA,MAAM,EAAE,MAAI,CAACF,KAAL,CAAWC,aAAX,CAAyBC,MAAzB,CAAgC0B,MAAhC,CACN,IAAIC,IAAJ,GAAWC,kBAAX,EADM;AAHQ,YAAlB;;AAOA,UAAA,MAAI,CAAChB,QAAL,CAAc;AAAEb,YAAAA,aAAa,EAAE0B;AAAjB,WAAd;AACD,SAd0B,EAcxB,IAdwB,CAA3B;AAeD,OAhBD;AAiBD;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,cAEW,KAAK3B,KAAL,CAAWa,MAFtB,EAGE,oBAAC,WAAD;AACE,QAAA,IAAI,EAAE,KAAKb,KAAL,CAAWC,aADnB;AAEE,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWU,gBAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF;AAUD;;;;EAjEuBhB,S;;AAoE1B,eAAeI,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Performance from \"./Performance\";\nimport NavBar from \"./Nav\";\nimport io from \"socket.io-client\";\n\nclass ChangeValue extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lineChartData: {\n        labels: [],\n        datasets: [\n          {\n            type: \"line\",\n            label: \"Performance of System\",\n            backgroundColor: \"rgba(0, 0, 0, 0)\",\n            borderWidth: \"2\",\n            lineTension: 0.45,\n            data: []\n          }\n        ]\n      },\n      lineChartOptions: {\n        responsive: true,\n        maintainAspectRatio: false\n      },\n      memory: null\n    };\n  }\n\n  change(memory) {\n    this.setState(prevState => ({\n      memory: memory\n    }));\n  }\n\n  componentDidMount() {\n    console.log(\"ehrkwhgirgo\");\n    var socket = io.connect(\"http://localhost:4001\");\n\n    socket.on(\"message2\", data => {\n      this.interval = setInterval(() => {\n        this.change(data);\n        const oldBtcDataSet = this.state.lineChartData.datasets[0];\n        const newBtcDataSet = { ...oldBtcDataSet };\n        newBtcDataSet.data.push(this.state.memory);\n\n        const newChartData = {\n          ...this.state.lineChartData,\n          datasets: [newBtcDataSet],\n          labels: this.state.lineChartData.labels.concat(\n            new Date().toLocaleTimeString()\n          )\n        };\n        this.setState({ lineChartData: newChartData });\n      }, 1000);\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <NavBar />\n        memory: {this.state.memory}\n        <Performance\n          data={this.state.lineChartData}\n          options={this.state.lineChartOptions}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ChangeValue;\n"]},"metadata":{},"sourceType":"module"}