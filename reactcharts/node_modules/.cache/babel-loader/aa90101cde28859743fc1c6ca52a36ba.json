{"ast":null,"code":"import _objectSpread from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/src/Components/PieChart.js\";\nimport React, { Component } from 'react';\nimport Piechart from './Pie';\nimport NavBar from './Nav';\nimport './changeValue.css';\nimport openSocket from 'socket.io-client';\nvar socket = openSocket('http://localhost:3000');\n\nvar ChangeValue =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChangeValue, _Component);\n\n  function ChangeValue(props) {\n    var _this;\n\n    _classCallCheck(this, ChangeValue);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChangeValue).call(this, props));\n    _this.state = {\n      pieChartData: {\n        labels: [],\n        datasets: [{\n          type: \"pie\",\n          label: \"Performance of System\",\n          backgroundColor: \"rgba(0, 0, 0, 0)\",\n          borderWidth: \"2\",\n          lineTension: 0.45,\n          data: []\n        }]\n      },\n      lineChartOptions: {\n        responsive: true,\n        maintainAspectRatio: false\n      },\n      //     scales: {\n      //        xAxes: [\n      //          {\n      //            ticks: {\n      //              autoSkip: true,\n      //              maxTicksLimit: 10\n      //            },\n      //          }\n      //        ],\n      //        yAxes: [{\n      //            ticks: {\n      //                beginAtZero:true,\n      //                min: 0,\n      //                max: 15.5\n      //            }\n      //          }]\n      //       }\n      //    },\n      height: 300,\n      memory: null\n    };\n    return _this;\n  }\n\n  _createClass(ChangeValue, [{\n    key: \"change\",\n    value: function change(memory) {\n      this.setState(function (prevState) {\n        return {\n          memory: memory / (1024 * 1024)\n        };\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      socket.on('info', function (data) {\n        _this2.change(data);\n\n        var oldBtcDataSet = _this2.state.lineChartData.datasets[0];\n\n        var newBtcDataSet = _objectSpread({}, oldBtcDataSet);\n\n        newBtcDataSet.data.push(_this2.state.memory);\n\n        if (newBtcDataSet.data.length % 15 === 0) {\n          newBtcDataSet.data.shift();\n        }\n\n        var newChartData = _objectSpread({}, _this2.state.lineChartData, {\n          datasets: [newBtcDataSet],\n          labels: _this2.state.lineChartData.labels.concat(new Date().toLocaleTimeString())\n        });\n\n        if (newChartData.labels.length % 15 === 0) {\n          newChartData.labels.shift();\n        }\n\n        _this2.setState({\n          lineChartData: newChartData\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(NavBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"chart_size\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"memory: \", this.state.memory, React.createElement(Piechart, {\n        data: this.state.lineChartData,\n        options: this.state.lineChartOptions,\n        height: this.state.height,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ChangeValue;\n}(Component);\n\nexport default ChangeValue;","map":{"version":3,"sources":["/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/src/Components/PieChart.js"],"names":["React","Component","Piechart","NavBar","openSocket","socket","ChangeValue","props","state","pieChartData","labels","datasets","type","label","backgroundColor","borderWidth","lineTension","data","lineChartOptions","responsive","maintainAspectRatio","height","memory","setState","prevState","on","change","oldBtcDataSet","lineChartData","newBtcDataSet","push","length","shift","newChartData","concat","Date","toLocaleTimeString"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Piechart from './Pie';\nimport NavBar from './Nav';\nimport './changeValue.css';\nimport openSocket from 'socket.io-client';\nconst socket = openSocket('http://localhost:3000');\n\nclass ChangeValue extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pieChartData: {\n        labels: [],\n        datasets: [\n          {\n            type: \"pie\",\n            label: \"Performance of System\",\n            backgroundColor: \"rgba(0, 0, 0, 0)\",\n            borderWidth: \"2\",\n            lineTension: 0.45,\n            data: []\n          }\n        ]\n      },\n      lineChartOptions: {\n        responsive: true,\n        maintainAspectRatio: false\n      },\n    //     scales: {\n    //        xAxes: [\n    //          {\n    //            ticks: {\n    //              autoSkip: true,\n    //              maxTicksLimit: 10\n    //            },\n    //          }\n    //        ],\n    //        yAxes: [{\n    //            ticks: {\n    //                beginAtZero:true,\n    //                min: 0,\n    //                max: 15.5\n    //            }\n    //          }]\n    //       }\n    //    },\n      height: 300,\n      memory: null\n    };\n  }\n    change(memory) {\n        this.setState(prevState => ({\n          memory:memory/(1024*1024)\n        }));\n      }\n\n      componentDidMount() {\n        socket.on('info', data => {\n            this.change(data);\n            const oldBtcDataSet = this.state.lineChartData.datasets[0];\n            const newBtcDataSet = { ...oldBtcDataSet };\n            newBtcDataSet.data.push(this.state.memory);\n            if(newBtcDataSet.data.length % 15 === 0) {\n              newBtcDataSet.data.shift();\n            }\n            const newChartData = {\n              ...this.state.lineChartData,\n              datasets: [newBtcDataSet],\n              labels: this.state.lineChartData.labels.concat( \n                new Date().toLocaleTimeString()\n              )\n            };\n            if(newChartData.labels.length % 15 === 0) {\n              newChartData.labels.shift();\n            }\n            this.setState({ lineChartData: newChartData });\n        });\n      }\n    \n      render() {\n        return (\n          <div>\n            <NavBar />\n            <div className=\"chart_size\">\n              memory: {this.state.memory}\n              <Piechart data={this.state.lineChartData} options={this.state.lineChartOptions} height={this.state.height}/>\n            </div>\n          </div>\n        );\n      }\n}\n\nexport default ChangeValue;\n"]},"metadata":{},"sourceType":"module"}