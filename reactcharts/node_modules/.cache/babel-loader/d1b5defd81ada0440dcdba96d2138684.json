{"ast":null,"code":"import _toConsumableArray from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/src/Components/SignUpComponent/SignUpUser.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Header from '../HeaderComponent/Header';\nimport './SignUpUser.css';\n\nvar googlePlus = require('../../Assets/Assets/google_plus.png');\n\nvar SignUpUser =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SignUpUser, _Component);\n\n  function SignUpUser(props) {\n    var _this;\n\n    _classCallCheck(this, SignUpUser);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SignUpUser).call(this, props));\n\n    _this.handleChangeUserName = function (event) {\n      _this.setState({\n        username: event.target.value\n      });\n\n      _this.clearValidationError(\"username\");\n\n      _this.setState({\n        flag1: 1\n      });\n    };\n\n    _this.handleChangeEmail = function (event) {\n      _this.setState({\n        email: event.target.value\n      });\n\n      _this.clearValidationError(\"email\");\n\n      _this.setState({\n        flag2: 1\n      });\n    };\n\n    _this.handleChangeMemoryMetric = function (event) {\n      _this.setState({\n        memorymetric: event.target.value\n      });\n\n      _this.clearValidationError(\"memorymetric\");\n\n      _this.setState({\n        flag3: 1\n      });\n    };\n\n    _this.handleChangeOrganisation = function (event) {\n      _this.setState({\n        organisation: event.target.value\n      });\n\n      _this.clearValidationError(\"organisation\");\n\n      _this.setState({\n        flag4: 1\n      });\n    };\n\n    _this.handleChangeDatabaseName = function (event) {\n      _this.setState({\n        databasename: event.target.value\n      });\n\n      _this.clearValidationError(\"databasename\");\n\n      _this.setState({\n        flag5: 1\n      });\n    };\n\n    _this.handleChangeDatabaseHost = function (event) {\n      _this.setState({\n        databasehost: event.target.value\n      });\n\n      _this.clearValidationError(\"databasehost\");\n\n      _this.setState({\n        flag6: 1\n      });\n    };\n\n    _this.handleChangeDatabaseIP = function (event) {\n      _this.setState({\n        databaseip: event.target.value\n      });\n\n      _this.clearValidationError(\"databaseip\");\n\n      _this.setState({\n        flag7: 1\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      if (_this.state.username === \"\") {\n        _this.showValidationError(\"username\", \"Username cannot be empty\");\n      }\n\n      if (_this.state.email === \"\") {\n        _this.showValidationError(\"email\", \"Email cannot be empty\");\n      }\n\n      if (_this.state.memorymetric === \"\") {\n        _this.showValidationError(\"memorymetric\", \"Role cannot be empty\");\n      }\n\n      if (_this.state.organisation === \"\") {\n        _this.showValidationError(\"organisation\", \"Organisation cannot be empty\");\n      }\n\n      if (_this.state.databasename === \"\") {\n        _this.showValidationError(\"databasename\", \"Database Name cannot be empty\");\n      }\n\n      if (_this.state.databasehost === \"\") {\n        _this.showValidationError(\"databasehost\", \"Database Host cannot be empty\");\n      }\n\n      if (_this.state.databaseip === \"\") {\n        _this.showValidationError(\"databaseip\", \"Database IP cannot be empty\");\n      }\n\n      if (_this.state.flag1 && _this.state.flag2 && _this.state.flag3 && _this.state.flag4 && _this.state.flag5 && _this.state.flag6 && _this.state.flag7 && _this.state.flag8) {\n        _this.setState({\n          redirect: true\n        });\n      }\n\n      event.preventDefault();\n    };\n\n    _this.state = {\n      username: '',\n      email: '',\n      memorymetric: '',\n      organisation: '',\n      databasename: '',\n      databasehost: '',\n      databaseip: '',\n      flag1: 0,\n      flag2: 0,\n      flag3: 0,\n      flag4: 0,\n      flag5: 0,\n      flag6: 0,\n      flag7: 0,\n      redirect: false,\n      errors: []\n    };\n    return _this;\n  }\n\n  _createClass(SignUpUser, [{\n    key: \"showValidationError\",\n    value: function showValidationError(elm, mssg) {\n      this.setState(function (prevState) {\n        return {\n          errors: [].concat(_toConsumableArray(prevState.errors), [{\n            elm: elm,\n            mssg: mssg\n          }])\n        };\n      });\n    }\n  }, {\n    key: \"clearValidationError\",\n    value: function clearValidationError(elm) {\n      this.setState(function (prevState) {\n        var newArr = [];\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = prevState.errors[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var err = _step.value;\n\n            if (elm !== err.elm) {\n              newArr.push(err);\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        return {\n          errors: newArr\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var usernameErr = null,\n          emailErr = null,\n          memorymetricErr = null,\n          organisationErr = null,\n          databasenameErr = null,\n          databasehostErr = null,\n          databaseipErr = null;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.state.errors[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var err = _step2.value;\n\n          if (err.elm === \"username\") {\n            usernameErr = err.mssg;\n          }\n\n          if (err.elm === \"email\") {\n            emailErr = err.mssg;\n          }\n\n          if (err.elm === \"memorymetric\") {\n            memorymetricErr = err.mssg;\n          }\n\n          if (err.elm === \"organisation\") {\n            organisationErr = err.mssg;\n          }\n\n          if (err.elm === \"databasename\") {\n            databasenameErr = err.mssg;\n          }\n\n          if (err.elm === \"databasehost\") {\n            databasehostErr = err.mssg;\n          }\n\n          if (err.elm === \"databaseip\") {\n            databaseipErr = err.mssg;\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      var redirectToReferrer = this.state.redirect;\n\n      if (redirectToReferrer === true) {\n        return React.createElement(Redirect, {\n          to: \"/Memory\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"signup-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"signupbutton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: googlePlus,\n        alt: \"googleplus\",\n        className: \"img\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), \"Sign in\"), React.createElement(\"form\", {\n        onSubmit: function onSubmit(e) {\n          return _this2.handleSubmit(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Name:\", React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"User...\",\n        value: this.state.username,\n        onChange: function onChange(e) {\n          return _this2.handleChangeUserName(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, usernameErr ? usernameErr : \"\")), React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"Email:\", React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Email...\",\n        value: this.state.email,\n        onChange: function onChange(e) {\n          return _this2.handleChangeEmail(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, emailErr ? emailErr : \"\")), React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Organisation:\", React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Organisation...\",\n        value: this.state.organisation,\n        onChange: function onChange(e) {\n          return _this2.handleChangeOrganisation(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, organisationErr ? organisationErr : \"\")), React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"Database Name:\", React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Database...\",\n        value: this.state.databasename,\n        onChange: function onChange(e) {\n          return _this2.handleChangeDatabaseName(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, databasenameErr ? databasenameErr : \"\")), React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Database Host:\", React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Host...\",\n        value: this.state.databasehost,\n        onChange: function onChange(e) {\n          return _this2.handleChangeDatabaseHost(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, databasehostErr ? databasehostErr : \"\")), React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Database IP:\", React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"IP...\",\n        value: this.state.databaseip,\n        onChange: function onChange(e) {\n          return _this2.handleChangeDatabaseIP(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, databaseipErr ? databaseipErr : \"\")), React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Memory Limit:\", React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Set Memory Limit\",\n        value: this.state.memorymetric,\n        onChange: function onChange(e) {\n          return _this2.handleChangeMemoryMetric(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, organisationErr ? organisationErr : \"\")), React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"Sign Up\")))));\n    }\n  }]);\n\n  return SignUpUser;\n}(Component);\n\nexport default SignUpUser;","map":{"version":3,"sources":["/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/src/Components/SignUpComponent/SignUpUser.js"],"names":["React","Component","Redirect","Header","googlePlus","require","SignUpUser","props","handleChangeUserName","event","setState","username","target","value","clearValidationError","flag1","handleChangeEmail","email","flag2","handleChangeMemoryMetric","memorymetric","flag3","handleChangeOrganisation","organisation","flag4","handleChangeDatabaseName","databasename","flag5","handleChangeDatabaseHost","databasehost","flag6","handleChangeDatabaseIP","databaseip","flag7","handleSubmit","state","showValidationError","flag8","redirect","preventDefault","errors","elm","mssg","prevState","newArr","err","push","usernameErr","emailErr","memorymetricErr","organisationErr","databasenameErr","databasehostErr","databaseipErr","redirectToReferrer","e"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAO,kBAAP;;AAEA,IAAMC,UAAU,GAAGC,OAAO,CAAC,qCAAD,CAA1B;;IAEMC,U;;;;;AACF,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,oFAAMA,KAAN;;AADe,UAqCjBC,oBArCiB,GAqCM,UAACC,KAAD,EAAW;AAChC,YAAKC,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAAzB,OAAd;;AACA,YAAKC,oBAAL,CAA0B,UAA1B;;AACA,YAAKJ,QAAL,CAAc;AAAEK,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD,KAzCgB;;AAAA,UA2CjBC,iBA3CiB,GA2CG,UAACP,KAAD,EAAW;AAC7B,YAAKC,QAAL,CAAc;AAAEO,QAAAA,KAAK,EAAER,KAAK,CAACG,MAAN,CAAaC;AAAtB,OAAd;;AACA,YAAKC,oBAAL,CAA0B,OAA1B;;AACA,YAAKJ,QAAL,CAAc;AAAEQ,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD,KA/CgB;;AAAA,UAiDjBC,wBAjDiB,GAiDU,UAACV,KAAD,EAAW;AACpC,YAAKC,QAAL,CAAc;AAAEU,QAAAA,YAAY,EAAEX,KAAK,CAACG,MAAN,CAAaC;AAA7B,OAAd;;AACA,YAAKC,oBAAL,CAA0B,cAA1B;;AACA,YAAKJ,QAAL,CAAc;AAAEW,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD,KArDgB;;AAAA,UAuDjBC,wBAvDiB,GAuDU,UAACb,KAAD,EAAW;AACpC,YAAKC,QAAL,CAAc;AAAEa,QAAAA,YAAY,EAAEd,KAAK,CAACG,MAAN,CAAaC;AAA7B,OAAd;;AACA,YAAKC,oBAAL,CAA0B,cAA1B;;AACA,YAAKJ,QAAL,CAAc;AAAEc,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD,KA3DgB;;AAAA,UA6DjBC,wBA7DiB,GA6DU,UAAChB,KAAD,EAAW;AACpC,YAAKC,QAAL,CAAc;AAAEgB,QAAAA,YAAY,EAAEjB,KAAK,CAACG,MAAN,CAAaC;AAA7B,OAAd;;AACA,YAAKC,oBAAL,CAA0B,cAA1B;;AACA,YAAKJ,QAAL,CAAc;AAAEiB,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD,KAjEgB;;AAAA,UAmEjBC,wBAnEiB,GAmEU,UAACnB,KAAD,EAAW;AACpC,YAAKC,QAAL,CAAc;AAAEmB,QAAAA,YAAY,EAAEpB,KAAK,CAACG,MAAN,CAAaC;AAA7B,OAAd;;AACA,YAAKC,oBAAL,CAA0B,cAA1B;;AACA,YAAKJ,QAAL,CAAc;AAAEoB,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD,KAvEgB;;AAAA,UAyEjBC,sBAzEiB,GAyEQ,UAACtB,KAAD,EAAW;AAClC,YAAKC,QAAL,CAAc;AAAEsB,QAAAA,UAAU,EAAEvB,KAAK,CAACG,MAAN,CAAaC;AAA3B,OAAd;;AACA,YAAKC,oBAAL,CAA0B,YAA1B;;AACA,YAAKJ,QAAL,CAAc;AAAEuB,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD,KA7EgB;;AAAA,UA+EjBC,YA/EiB,GA+EF,UAACzB,KAAD,EAAW;AACxB,UAAG,MAAK0B,KAAL,CAAWxB,QAAX,KAAwB,EAA3B,EAA+B;AAC7B,cAAKyB,mBAAL,CAAyB,UAAzB,EAAqC,0BAArC;AACD;;AACD,UAAG,MAAKD,KAAL,CAAWlB,KAAX,KAAqB,EAAxB,EAA4B;AAC1B,cAAKmB,mBAAL,CAAyB,OAAzB,EAAkC,uBAAlC;AACD;;AACD,UAAG,MAAKD,KAAL,CAAWf,YAAX,KAA4B,EAA/B,EAAmC;AAC/B,cAAKgB,mBAAL,CAAyB,cAAzB,EAAyC,sBAAzC;AACH;;AACD,UAAG,MAAKD,KAAL,CAAWZ,YAAX,KAA4B,EAA/B,EAAmC;AAC/B,cAAKa,mBAAL,CAAyB,cAAzB,EAAyC,8BAAzC;AACH;;AACD,UAAG,MAAKD,KAAL,CAAWT,YAAX,KAA4B,EAA/B,EAAmC;AAC/B,cAAKU,mBAAL,CAAyB,cAAzB,EAAyC,+BAAzC;AACH;;AACD,UAAG,MAAKD,KAAL,CAAWN,YAAX,KAA4B,EAA/B,EAAmC;AAC/B,cAAKO,mBAAL,CAAyB,cAAzB,EAAyC,+BAAzC;AACH;;AACD,UAAG,MAAKD,KAAL,CAAWH,UAAX,KAA0B,EAA7B,EAAiC;AAC7B,cAAKI,mBAAL,CAAyB,YAAzB,EAAuC,6BAAvC;AACH;;AAED,UAAG,MAAKD,KAAL,CAAWpB,KAAX,IAAoB,MAAKoB,KAAL,CAAWjB,KAA/B,IAAwC,MAAKiB,KAAL,CAAWd,KAAnD,IAA4D,MAAKc,KAAL,CAAWX,KAAvE,IACI,MAAKW,KAAL,CAAWR,KADf,IACwB,MAAKQ,KAAL,CAAWL,KADnC,IAC4C,MAAKK,KAAL,CAAWF,KADvD,IACgE,MAAKE,KAAL,CAAWE,KAD9E,EACqF;AACnF,cAAK3B,QAAL,CAAc;AAAE4B,UAAAA,QAAQ,EAAE;AAAZ,SAAd;AACD;;AACD7B,MAAAA,KAAK,CAAC8B,cAAN;AACD,KA3GgB;;AAEf,UAAKJ,KAAL,GAAa;AACXxB,MAAAA,QAAQ,EAAE,EADC;AAEXM,MAAAA,KAAK,EAAE,EAFI;AAGXG,MAAAA,YAAY,EAAE,EAHH;AAIXG,MAAAA,YAAY,EAAE,EAJH;AAKXG,MAAAA,YAAY,EAAE,EALH;AAMXG,MAAAA,YAAY,EAAE,EANH;AAOXG,MAAAA,UAAU,EAAE,EAPD;AAQXjB,MAAAA,KAAK,EAAE,CARI;AASXG,MAAAA,KAAK,EAAE,CATI;AAUXG,MAAAA,KAAK,EAAE,CAVI;AAWXG,MAAAA,KAAK,EAAE,CAXI;AAYXG,MAAAA,KAAK,EAAE,CAZI;AAaXG,MAAAA,KAAK,EAAE,CAbI;AAcXG,MAAAA,KAAK,EAAE,CAdI;AAeXK,MAAAA,QAAQ,EAAE,KAfC;AAgBXE,MAAAA,MAAM,EAAE;AAhBG,KAAb;AAFe;AAoBlB;;;;wCACqBC,G,EAAKC,I,EAAM;AAC7B,WAAKhC,QAAL,CAAc,UAACiC,SAAD;AAAA,eAAiB;AAAEH,UAAAA,MAAM,+BAAMG,SAAS,CAACH,MAAhB,IAAwB;AAAEC,YAAAA,GAAG,EAAHA,GAAF;AAAOC,YAAAA,IAAI,EAAJA;AAAP,WAAxB;AAAR,SAAjB;AAAA,OAAd;AACD;;;yCAEoBD,G,EAAK;AACxB,WAAK/B,QAAL,CAAc,UAACiC,SAAD,EAAe;AAC3B,YAAIC,MAAM,GAAG,EAAb;AAD2B;AAAA;AAAA;;AAAA;AAE3B,+BAAeD,SAAS,CAACH,MAAzB,8HAAiC;AAAA,gBAAzBK,GAAyB;;AAC/B,gBAAGJ,GAAG,KAAKI,GAAG,CAACJ,GAAf,EAAoB;AAClBG,cAAAA,MAAM,CAACE,IAAP,CAAYD,GAAZ;AACD;AACF;AAN0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAO3B,eAAO;AAACL,UAAAA,MAAM,EAAEI;AAAT,SAAP;AACD,OARD;AASD;;;6BA0EM;AAAA;;AACL,UAAIG,WAAW,GAAG,IAAlB;AAAA,UAAwBC,QAAQ,GAAG,IAAnC;AAAA,UAAyCC,eAAe,GAAG,IAA3D;AAAA,UACIC,eAAe,GAAG,IADtB;AAAA,UAC4BC,eAAe,GAAG,IAD9C;AAAA,UACoDC,eAAe,GAAG,IADtE;AAAA,UAC4EC,aAAa,GAAG,IAD5F;AADK;AAAA;AAAA;;AAAA;AAIL,8BAAe,KAAKlB,KAAL,CAAWK,MAA1B,mIAAiC;AAAA,cAAzBK,GAAyB;;AAC/B,cAAGA,GAAG,CAACJ,GAAJ,KAAY,UAAf,EAA2B;AACzBM,YAAAA,WAAW,GAAGF,GAAG,CAACH,IAAlB;AACD;;AACD,cAAGG,GAAG,CAACJ,GAAJ,KAAY,OAAf,EAAwB;AACtBO,YAAAA,QAAQ,GAAGH,GAAG,CAACH,IAAf;AACD;;AACD,cAAGG,GAAG,CAACJ,GAAJ,KAAY,cAAf,EAA+B;AAC7BQ,YAAAA,eAAe,GAAGJ,GAAG,CAACH,IAAtB;AACD;;AACD,cAAGG,GAAG,CAACJ,GAAJ,KAAY,cAAf,EAA+B;AAC7BS,YAAAA,eAAe,GAAGL,GAAG,CAACH,IAAtB;AACD;;AACD,cAAGG,GAAG,CAACJ,GAAJ,KAAY,cAAf,EAA+B;AAC7BU,YAAAA,eAAe,GAAGN,GAAG,CAACH,IAAtB;AACD;;AACD,cAAGG,GAAG,CAACJ,GAAJ,KAAY,cAAf,EAA+B;AAC7BW,YAAAA,eAAe,GAAGP,GAAG,CAACH,IAAtB;AACD;;AACD,cAAGG,GAAG,CAACJ,GAAJ,KAAY,YAAf,EAA6B;AAC3BY,YAAAA,aAAa,GAAGR,GAAG,CAACH,IAApB;AACD;AACF;AA1BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA4BL,UAAMY,kBAAkB,GAAG,KAAKnB,KAAL,CAAWG,QAAtC;;AACA,UAAIgB,kBAAkB,KAAK,IAA3B,EAAiC;AAC7B,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AAED,aACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAElD,UAAV;AAAsB,QAAA,GAAG,EAAC,YAA1B;AAAuC,QAAA,SAAS,EAAC,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,YADA,EAKA;AAAM,QAAA,QAAQ,EAAE,kBAACmD,CAAD;AAAA,iBAAO,MAAI,CAACrB,YAAL,CAAkBqB,CAAlB,CAAP;AAAA,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,SAA/B;AAAyC,QAAA,KAAK,EAAE,KAAKpB,KAAL,CAAWxB,QAA3D;AAAqE,QAAA,QAAQ,EAAE,kBAAC4C,CAAD;AAAA,iBAAO,MAAI,CAAC/C,oBAAL,CAA0B+C,CAA1B,CAAP;AAAA,SAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMR,WAAW,GAAGA,WAAH,GAAiB,EAAlC,CAHF,CADA,EAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,UAA/B;AAA0C,QAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWlB,KAA5D;AAAmE,QAAA,QAAQ,EAAE,kBAACsC,CAAD;AAAA,iBAAO,MAAI,CAACvC,iBAAL,CAAuBuC,CAAvB,CAAP;AAAA,SAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMP,QAAQ,GAAGA,QAAH,GAAc,EAA5B,CAHF,CANA,EAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,iBAA/B;AAAiD,QAAA,KAAK,EAAE,KAAKb,KAAL,CAAWZ,YAAnE;AAAiF,QAAA,QAAQ,EAAE,kBAACgC,CAAD;AAAA,iBAAO,MAAI,CAACjC,wBAAL,CAA8BiC,CAA9B,CAAP;AAAA,SAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAML,eAAe,GAAGA,eAAH,GAAqB,EAA1C,CAHF,CAXA,EAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,aAA/B;AAA6C,QAAA,KAAK,EAAE,KAAKf,KAAL,CAAWT,YAA/D;AAA6E,QAAA,QAAQ,EAAE,kBAAC6B,CAAD;AAAA,iBAAO,MAAI,CAAC9B,wBAAL,CAA8B8B,CAA9B,CAAP;AAAA,SAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMJ,eAAe,GAAGA,eAAH,GAAqB,EAA1C,CAHF,CAhBA,EAqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,SAA/B;AAAyC,QAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWN,YAA3D;AAAyE,QAAA,QAAQ,EAAE,kBAAC0B,CAAD;AAAA,iBAAO,MAAI,CAAC3B,wBAAL,CAA8B2B,CAA9B,CAAP;AAAA,SAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMH,eAAe,GAAGA,eAAH,GAAqB,EAA1C,CAHF,CArBA,EA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,OAA/B;AAAuC,QAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWH,UAAzD;AAAqE,QAAA,QAAQ,EAAE,kBAACuB,CAAD;AAAA,iBAAO,MAAI,CAACxB,sBAAL,CAA4BwB,CAA5B,CAAP;AAAA,SAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMF,aAAa,GAAGA,aAAH,GAAmB,EAAtC,CAHF,CA1BA,EA+BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,kBAA/B;AAAkD,QAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWf,YAApE;AAAkF,QAAA,QAAQ,EAAE,kBAACmC,CAAD;AAAA,iBAAO,MAAI,CAACpC,wBAAL,CAA8BoC,CAA9B,CAAP;AAAA,SAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAML,eAAe,GAAGA,eAAH,GAAqB,EAA1C,CAHF,CA/BA,EAoCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CApCA,CALA,CAFJ,CADJ;AAmDH;;;;EAlMoBjD,S;;AAoMzB,eAAeK,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Header from '../HeaderComponent/Header';\nimport './SignUpUser.css';\n\nconst googlePlus = require('../../Assets/Assets/google_plus.png');\n\nclass SignUpUser extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          username: '',\n          email: '',\n          memorymetric: '',\n          organisation: '',\n          databasename: '',\n          databasehost: '',\n          databaseip: '',\n          flag1: 0,\n          flag2: 0,\n          flag3: 0,\n          flag4: 0,\n          flag5: 0,\n          flag6: 0,\n          flag7: 0,\n          redirect: false,\n          errors: []\n        }\n    }\n      showValidationError(elm, mssg) {\n        this.setState((prevState) => ( { errors: [...prevState.errors, { elm, mssg} ] }))\n      }\n      \n      clearValidationError(elm) {\n        this.setState((prevState) => {\n          let newArr = [];\n          for(let err of prevState.errors) {\n            if(elm !== err.elm) {\n              newArr.push(err);\n            }\n          }\n          return {errors: newArr};\n        })\n      }\n      \n      handleChangeUserName = (event) => {\n        this.setState({ username: event.target.value });\n        this.clearValidationError(\"username\");\n        this.setState({ flag1: 1});\n      }\n    \n      handleChangeEmail = (event) => {\n        this.setState({ email: event.target.value });\n        this.clearValidationError(\"email\");\n        this.setState({ flag2: 1});\n      }\n      \n      handleChangeMemoryMetric = (event) => {\n        this.setState({ memorymetric: event.target.value });\n        this.clearValidationError(\"memorymetric\");\n        this.setState({ flag3: 1});\n      }\n\n      handleChangeOrganisation = (event) => {\n        this.setState({ organisation: event.target.value });\n        this.clearValidationError(\"organisation\");\n        this.setState({ flag4: 1});\n      }\n\n      handleChangeDatabaseName = (event) => {\n        this.setState({ databasename: event.target.value });\n        this.clearValidationError(\"databasename\");\n        this.setState({ flag5: 1});\n      }\n\n      handleChangeDatabaseHost = (event) => {\n        this.setState({ databasehost: event.target.value });\n        this.clearValidationError(\"databasehost\");\n        this.setState({ flag6: 1});\n      }\n\n      handleChangeDatabaseIP = (event) => {\n        this.setState({ databaseip: event.target.value });\n        this.clearValidationError(\"databaseip\");\n        this.setState({ flag7: 1});\n      }\n\n      handleSubmit = (event) => {\n        if(this.state.username === \"\") {\n          this.showValidationError(\"username\", \"Username cannot be empty\");\n        }\n        if(this.state.email === \"\") {\n          this.showValidationError(\"email\", \"Email cannot be empty\");\n        }\n        if(this.state.memorymetric === \"\") {\n            this.showValidationError(\"memorymetric\", \"Role cannot be empty\");\n        }\n        if(this.state.organisation === \"\") {\n            this.showValidationError(\"organisation\", \"Organisation cannot be empty\");\n        }\n        if(this.state.databasename === \"\") {\n            this.showValidationError(\"databasename\", \"Database Name cannot be empty\");\n        }\n        if(this.state.databasehost === \"\") {\n            this.showValidationError(\"databasehost\", \"Database Host cannot be empty\");\n        }\n        if(this.state.databaseip === \"\") {\n            this.showValidationError(\"databaseip\", \"Database IP cannot be empty\");\n        }\n\n        if(this.state.flag1 && this.state.flag2 && this.state.flag3 && this.state.flag4\n            && this.state.flag5 && this.state.flag6 && this.state.flag7 && this.state.flag8) {\n          this.setState({ redirect: true});\n        }\n        event.preventDefault();\n      }\n\n    render() {\n        let usernameErr = null, emailErr = null, memorymetricErr = null,\n            organisationErr = null, databasenameErr = null, databasehostErr = null, databaseipErr = null;\n\n        for(let err of this.state.errors){\n          if(err.elm === \"username\") {\n            usernameErr = err.mssg;\n          }\n          if(err.elm === \"email\") {\n            emailErr = err.mssg;\n          }\n          if(err.elm === \"memorymetric\") {\n            memorymetricErr = err.mssg;\n          }\n          if(err.elm === \"organisation\") {\n            organisationErr = err.mssg;\n          }\n          if(err.elm === \"databasename\") {\n            databasenameErr = err.mssg;\n          }\n          if(err.elm === \"databasehost\") {\n            databasehostErr = err.mssg;\n          }\n          if(err.elm === \"databaseip\") {\n            databaseipErr = err.mssg;\n          }\n        }\n\n        const redirectToReferrer = this.state.redirect;\n        if (redirectToReferrer === true) {\n            return <Redirect to=\"/Memory\" />\n        }\n\n        return (\n            <div className=\"signup-container\">\n              <Header />\n                <div className=\"form\">\n                <button type=\"submit\" className=\"signupbutton\">\n                  <img src={googlePlus} alt=\"googleplus\" className=\"img\"/>\n                  Sign in\n                </button>\n                <form onSubmit={(e) => this.handleSubmit(e)}>\n                <section>\n                  Name:\n                  <input type=\"text\" placeholder=\"User...\" value={this.state.username} onChange={(e) => this.handleChangeUserName(e)} />\n                  <div>{usernameErr ? usernameErr : \"\"}</div>\n                </section>\n                <section>\n                  Email:\n                  <input type=\"text\" placeholder=\"Email...\" value={this.state.email} onChange={(e) => this.handleChangeEmail(e)} />\n                  <div>{emailErr ? emailErr : \"\"}</div>\n                </section>\n                <section>\n                  Organisation:\n                  <input type=\"text\" placeholder=\"Organisation...\" value={this.state.organisation} onChange={(e) => this.handleChangeOrganisation(e)} />\n                  <div>{organisationErr ? organisationErr : \"\"}</div>\n                </section>\n                <section>\n                  Database Name:\n                  <input type=\"text\" placeholder=\"Database...\" value={this.state.databasename} onChange={(e) => this.handleChangeDatabaseName(e)} />\n                  <div>{databasenameErr ? databasenameErr : \"\"}</div>\n                </section>\n                <section>\n                  Database Host:\n                  <input type=\"text\" placeholder=\"Host...\" value={this.state.databasehost} onChange={(e) => this.handleChangeDatabaseHost(e)} />\n                  <div>{databasehostErr ? databasehostErr : \"\"}</div>\n                </section>\n                <section>\n                  Database IP:\n                  <input type=\"text\" placeholder=\"IP...\" value={this.state.databaseip} onChange={(e) => this.handleChangeDatabaseIP(e)} />\n                  <div>{databaseipErr ? databaseipErr : \"\"}</div>\n                </section>\n                <section>\n                  Memory Limit:\n                  <input type=\"text\" placeholder=\"Set Memory Limit\" value={this.state.memorymetric} onChange={(e) => this.handleChangeMemoryMetric(e)} />\n                  <div>{organisationErr ? organisationErr : \"\"}</div>\n                </section>\n                <section>\n                  <button type=\"submit\">Sign Up</button>\n                </section>\n            </form>   \n            </div>\n            </div>\n        )\n    }\n}\nexport default SignUpUser;\n"]},"metadata":{},"sourceType":"module"}