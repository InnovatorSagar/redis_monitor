{"ast":null,"code":"import _objectSpread from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/src/Components/changeValue.js\";\nimport React, { Component } from 'react';\nimport Performance from './Performance';\nimport NavBar from './Nav';\nimport openSocket from 'socket.io-client';\nvar socket = openSocket('http://localhost:3000');\n\nvar ChangeValue =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChangeValue, _Component);\n\n  function ChangeValue(props) {\n    var _this;\n\n    _classCallCheck(this, ChangeValue);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChangeValue).call(this, props));\n    _this.state = {\n      lineChartData: {\n        labels: [],\n        datasets: [{\n          type: \"line\",\n          label: \"Performance of System\",\n          backgroundColor: \"rgba(0, 0, 0, 0)\",\n          borderWidth: \"2\",\n          lineTension: 0.45,\n          data: []\n        }]\n      },\n      lineChartOptions: {\n        responsive: true,\n        maintainAspectRatio: false\n      },\n      memory: null\n    };\n    return _this;\n  }\n\n  _createClass(ChangeValue, [{\n    key: \"change\",\n    value: function change(memory) {\n      this.setState(function (prevState) {\n        return {\n          memory: memory\n        };\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      socket.on('info', function (data) {\n        _this2.change(data);\n\n        var oldBtcDataSet = _this2.state.lineChartData.datasets[0];\n\n        var newBtcDataSet = _objectSpread({}, oldBtcDataSet);\n\n        newBtcDataSet.data.push(_this2.state.memory);\n\n        var newChartData = _objectSpread({}, _this2.state.lineChartData, {\n          datasets: [newBtcDataSet],\n          labels: _this2.state.lineChartData.labels.concat(new Date().toLocaleTimeString())\n        });\n\n        _this2.setState({\n          lineChartData: newChartData\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(NavBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), \"memory: \", this.state.memory, React.createElement(Performance, {\n        data: this.state.lineChartData,\n        options: this.state.lineChartOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ChangeValue;\n}(Component);\n\nexport default ChangeValue;","map":{"version":3,"sources":["/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/src/Components/changeValue.js"],"names":["React","Component","Performance","NavBar","openSocket","socket","ChangeValue","props","state","lineChartData","labels","datasets","type","label","backgroundColor","borderWidth","lineTension","data","lineChartOptions","responsive","maintainAspectRatio","memory","setState","prevState","on","change","oldBtcDataSet","newBtcDataSet","push","newChartData","concat","Date","toLocaleTimeString"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,OAAnB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,IAAMC,MAAM,GAAGD,UAAU,CAAC,uBAAD,CAAzB;;IAEME,W;;;;;AACF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,aAAa,EAAE;AACXC,QAAAA,MAAM,EAAE,EADG;AAEXC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,IAAI,EAAE,MADR;AAEEC,UAAAA,KAAK,EAAE,uBAFT;AAGEC,UAAAA,eAAe,EAAE,kBAHnB;AAIEC,UAAAA,WAAW,EAAE,GAJf;AAKEC,UAAAA,WAAW,EAAE,IALf;AAMEC,UAAAA,IAAI,EAAE;AANR,SADQ;AAFC,OADN;AAcTC,MAAAA,gBAAgB,EAAE;AACdC,QAAAA,UAAU,EAAE,IADE;AAEdC,QAAAA,mBAAmB,EAAE;AAFP,OAdT;AAkBTC,MAAAA,MAAM,EAAE;AAlBC,KAAb;AAFe;AAsBlB;;;;2BAEMA,M,EAAQ;AACX,WAAKC,QAAL,CAAc,UAAAC,SAAS;AAAA,eAAK;AAC1BF,UAAAA,MAAM,EAACA;AADmB,SAAL;AAAA,OAAvB;AAGD;;;wCAEmB;AAAA;;AAClBhB,MAAAA,MAAM,CAACmB,EAAP,CAAU,MAAV,EAAkB,UAAAP,IAAI,EAAI;AACtB,QAAA,MAAI,CAACQ,MAAL,CAAYR,IAAZ;;AACA,YAAMS,aAAa,GAAG,MAAI,CAAClB,KAAL,CAAWC,aAAX,CAAyBE,QAAzB,CAAkC,CAAlC,CAAtB;;AACA,YAAMgB,aAAa,qBAAQD,aAAR,CAAnB;;AACAC,QAAAA,aAAa,CAACV,IAAd,CAAmBW,IAAnB,CAAwB,MAAI,CAACpB,KAAL,CAAWa,MAAnC;;AAEA,YAAMQ,YAAY,qBACb,MAAI,CAACrB,KAAL,CAAWC,aADE;AAEhBE,UAAAA,QAAQ,EAAE,CAACgB,aAAD,CAFM;AAGhBjB,UAAAA,MAAM,EAAE,MAAI,CAACF,KAAL,CAAWC,aAAX,CAAyBC,MAAzB,CAAgCoB,MAAhC,CACN,IAAIC,IAAJ,GAAWC,kBAAX,EADM;AAHQ,UAAlB;;AAOA,QAAA,MAAI,CAACV,QAAL,CAAc;AAAEb,UAAAA,aAAa,EAAEoB;AAAjB,SAAd;AACH,OAdD;AAeD;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,cAEW,KAAKrB,KAAL,CAAWa,MAFtB,EAGE,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAE,KAAKb,KAAL,CAAWC,aAA9B;AAA6C,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWU,gBAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF;AAOD;;;;EAzDmBjB,S;;AA4D1B,eAAeK,WAAf","sourcesContent":["import React, {Component} from 'react';\nimport Performance from './Performance';\nimport NavBar from './Nav';\nimport openSocket from 'socket.io-client';\nconst socket = openSocket('http://localhost:3000');\n\nclass ChangeValue extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            lineChartData: {\n                labels: [],\n                datasets: [\n                  {\n                    type: \"line\",\n                    label: \"Performance of System\",\n                    backgroundColor: \"rgba(0, 0, 0, 0)\",\n                    borderWidth: \"2\",\n                    lineTension: 0.45,\n                    data: []\n                  }\n                ]\n              },\n            lineChartOptions: {\n                responsive: true,\n                maintainAspectRatio: false,\n            },\n            memory: null,\n        }\n    }\n\n    change(memory) {\n        this.setState(prevState => ({\n          memory:memory\n        }));\n      }\n\n      componentDidMount() {\n        socket.on('info', data => {\n            this.change(data);\n            const oldBtcDataSet = this.state.lineChartData.datasets[0];\n            const newBtcDataSet = { ...oldBtcDataSet };\n            newBtcDataSet.data.push(this.state.memory);\n    \n            const newChartData = {\n              ...this.state.lineChartData,\n              datasets: [newBtcDataSet],\n              labels: this.state.lineChartData.labels.concat(\n                new Date().toLocaleTimeString()\n              )\n            };\n            this.setState({ lineChartData: newChartData });\n        });\n      }\n    \n      render() {\n        return (\n          <div>\n            <NavBar />\n            memory: {this.state.memory}\n            <Performance data={this.state.lineChartData} options={this.state.lineChartOptions} />\n          </div>\n        );\n      }\n}\n\nexport default ChangeValue;"]},"metadata":{},"sourceType":"module"}