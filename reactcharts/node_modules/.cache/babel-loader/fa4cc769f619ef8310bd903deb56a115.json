{"ast":null,"code":"import _objectSpread from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/src/Components/BarChart.js\";\nimport React, { Component } from 'react';\nimport Barchart from './Bar';\nimport NavBar from './Nav';\nimport './changeValue.css';\nimport openSocket from 'socket.io-client';\nvar socket = openSocket('http://localhost:3000');\n\nvar BarChart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BarChart, _Component);\n\n  function BarChart(props) {\n    var _this;\n\n    _classCallCheck(this, BarChart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BarChart).call(this, props));\n    _this.state = {\n      barChartData: {\n        labels: [],\n        datasets: [{\n          type: \"bar\",\n          label: \"Performance of System\",\n          backgroundColor: ['orange', 'blue'],\n          borderWidth: \"2\",\n          lineTension: 0.45,\n          data: []\n        }]\n      },\n      barChartOptions: {\n        responsive: true,\n        maintainAspectRatio: false\n      },\n      height: 300,\n      memory: null\n    };\n    return _this;\n  }\n\n  _createClass(BarChart, [{\n    key: \"change\",\n    value: function change(memory) {\n      this.setState(function (prevState) {\n        return {\n          memory: memory / (1024 * 1024) * 10000\n        };\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      socket.on('info', function (data) {\n        _this2.change(data);\n\n        _this2.setState({\n          percentage: _this2.state.memory\n        });\n\n        var oldDataSet = _this2.state.barChartData.datasets[0];\n\n        var newDataSet = _objectSpread({}, oldDataSet);\n\n        newDataSet.data.push(_this2.state.memory);\n\n        if (newDataSet.data.length % 5 === 0) {\n          newDataSet.data.shift();\n        }\n\n        var newChartData = _objectSpread({}, _this2.state.pieChartData, {\n          datasets: [newDataSet],\n          labels: _this2.state.barChartData.labels.concat(new Date().toLocaleTimeString())\n        });\n\n        if (newChartData.labels.length % 5 === 0) {\n          newChartData.labels.shift();\n        }\n\n        _this2.setState({\n          barChartData: newChartData\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(NavBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"chart_size\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Number of Clients: \", this.state.memory, React.createElement(Barchart, {\n        data: this.state.barChartData,\n        options: this.state.barChartOptions,\n        height: this.state.height,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return BarChart;\n}(Component);\n\nexport default BarChart;","map":{"version":3,"sources":["/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/src/Components/BarChart.js"],"names":["React","Component","Barchart","NavBar","openSocket","socket","BarChart","props","state","barChartData","labels","datasets","type","label","backgroundColor","borderWidth","lineTension","data","barChartOptions","responsive","maintainAspectRatio","height","memory","setState","prevState","on","change","percentage","oldDataSet","newDataSet","push","length","shift","newChartData","pieChartData","concat","Date","toLocaleTimeString"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Barchart from './Bar';\nimport NavBar from './Nav';\nimport './changeValue.css';\nimport openSocket from 'socket.io-client';\nconst socket = openSocket('http://localhost:3000');\n\nclass BarChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      barChartData: {\n        labels: [],\n        datasets: [\n          {\n            type: \"bar\",\n            label: \"Performance of System\",\n            backgroundColor: ['orange','blue'],\n            borderWidth: \"2\",\n            lineTension: 0.45,\n            data: []\n          }\n        ]\n      },\n      barChartOptions: {\n        responsive: true,\n        maintainAspectRatio: false,\n      },\n      height: 300,\n      memory: null\n    };\n  }\n    change(memory) {\n        this.setState(prevState => ({\n          memory:(memory/(1024*1024))*10000\n        }));\n      }\n\n      componentDidMount() {\n        socket.on('info', data => {\n            this.change(data);\n            this.setState({percentage : this.state.memory})\n            const oldDataSet = this.state.barChartData.datasets[0];\n            const newDataSet = { ...oldDataSet };\n            newDataSet.data.push(this.state.memory);\n            if(newDataSet.data.length % 5 === 0) {\n                newDataSet.data.shift();\n              }\n            const newChartData = {\n                ...this.state.pieChartData,\n                datasets: [newDataSet],\n                labels: this.state.barChartData.labels.concat( \n                   new Date().toLocaleTimeString()\n                 )\n               };\n               if(newChartData.labels.length % 5 === 0) {\n                 newChartData.labels.shift();\n               }\n              this.setState({ barChartData: newChartData });\n            \n        });\n      }\n    \n      render() {\n        return (\n          <div>\n            <NavBar />\n            <div className=\"chart_size\">\n              Number of Clients: {this.state.memory}\n              <Barchart data={this.state.barChartData} options={this.state.barChartOptions} height={this.state.height} />\n            </div>\n          </div>\n        );\n      }\n}\n\nexport default BarChart;\n"]},"metadata":{},"sourceType":"module"}