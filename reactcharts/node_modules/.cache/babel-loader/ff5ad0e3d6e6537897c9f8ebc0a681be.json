{"ast":null,"code":"// import React, {Component} from 'react';\n// import { Redirect } from 'react-router-dom';\n// import Memory from './Memory';\n// class Login extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//           username: '',\n//           email: '',\n//           password: '',\n//           flag1: 0,\n//           flag2: 0,\n//           flag3: 0,\n//           redirect: false,\n//           errors: []\n//         }\n//     }\n//       showValidationError(elm, mssg) {\n//         this.setState((prevState) => ( { errors: [...prevState.errors, { elm, mssg} ] }))\n//       }\n//       clearValidationError(elm) {\n//         this.setState((prevState) => {\n//           let newArr = [];\n//           for(let err of prevState.errors) {\n//             if(elm !== err.elm) {\n//               newArr.push(err);\n//             }\n//           }\n//           return {errors: newArr};\n//         })\n//       }\n//       handleChangeUserName = (event) => {\n//         this.setState({ username: event.target.value });\n//         this.clearValidationError(\"username\");\n//         this.setState({ flag1: 1});\n//       }\n//       handleChangeEmail = (event) => {\n//         this.setState({ email: event.target.value });\n//         this.clearValidationError(\"email\");\n//         this.setState({ flag2: 1});\n//       }\n//       handleChangePassword = (event) => {\n//         this.setState({ password: event.target.value });\n//         this.clearValidationError(\"password\");\n//         this.setState({ flag3: 1});\n//       }\n//       handleSubmit = (event) => {\n//         if(this.state.username === \"\") {\n//           this.showValidationError(\"username\", \"Username cannot be empty\");\n//         }\n//         if(this.state.email === \"\") {\n//           this.showValidationError(\"email\", \"Email cannot be empty\");\n//         }\n//         if(this.state.password === \"\") {\n//           this.showValidationError(\"password\", \"Password cannot be empty\");\n//         }\n//         console.log(this.state.flag1 && this.state.flag2 && this.state.flag3);\n//         if(this.state.flag1 && this.state.flag2 && this.state.flag3) {\n//           this.setState({ redirect: true});\n//         }\n//         //console.log(this.state);\n//         event.preventDefault();\n//     //     fetch('http://localhost:8000/api/v1/issues/', {\n//     //     method: 'POST',\n//     //     headers: new Headers({\n//     //       'Access-Control-Allow-Origin': '*',\n//     //       'Content-Type': 'application/json',\n//     // }),\n//     //     body: JSON.stringify(this.state)\n//     //   }).then(res => res.json())\n//     //   .then(() => { this.props.history.push('/'); });\n//       }\n//       render() {\n//         let usernameErr = null, emailErr = null, passwordErr = null;\n//         for(let err of this.state.errors){\n//           if(err.elm === \"username\") {\n//             usernameErr = err.mssg;\n//           }\n//           if(err.elm === \"email\") {\n//             emailErr = err.mssg;\n//           }\n//           if(err.elm === \"password\") {\n//             passwordErr = err.mssg;\n//           }\n//         }\n//         const redirectToReferrer = this.state.redirect;\n//         if (redirectToReferrer === true) {\n//             return <Redirect to=\"/Memory\" />\n//         }\n//         return (\n//             <form onSubmit={(e) => this.handleSubmit(e)}>\n//               <section>\n//                 Username:\n//                 <input type=\"text\" placeholder=\"User...\" value={this.state.username} onChange={(e) => this.handleChangeUserName(e)} />\n//                 <div>{usernameErr ? usernameErr : \"\"}</div>\n//               </section>\n//               <section>\n//                 Email:\n//                 <input type=\"text\" placeholder=\"Email...\" value={this.state.email} onChange={(e) => this.handleChangeEmail(e)} />\n//                 <div>{emailErr ? emailErr : \"\"}</div>\n//               </section>\n//               <section>\n//                 Password:\n//                 <input type=\"password\" placeholder=\"Password...\" value={this.state.password} onChange={(e) => this.handleChangePassword(e)} />\n//                 <div>{passwordErr ? passwordErr : \"\"}</div>\n//               </section>\n//               <section>\n//                   <button type=\"submit\">Register</button>\n//               </section>\n//             </form>   \n//           )\n//         }\n// }\n// export default Login;","map":{"version":3,"sources":["/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/src/Components/Login.js"],"names":[],"mappingssourcesContent":["// import React, {Component} from 'react';\n// import { Redirect } from 'react-router-dom';\n// import Memory from './Memory';\n\n// class Login extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//           username: '',\n//           email: '',\n//           password: '',\n//           flag1: 0,\n//           flag2: 0,\n//           flag3: 0,\n//           redirect: false,\n//           errors: []\n//         }\n//     }\n//       showValidationError(elm, mssg) {\n//         this.setState((prevState) => ( { errors: [...prevState.errors, { elm, mssg} ] }))\n//       }\n      \n//       clearValidationError(elm) {\n//         this.setState((prevState) => {\n//           let newArr = [];\n//           for(let err of prevState.errors) {\n//             if(elm !== err.elm) {\n//               newArr.push(err);\n//             }\n//           }\n//           return {errors: newArr};\n//         })\n//       }\n\n//       handleChangeUserName = (event) => {\n//         this.setState({ username: event.target.value });\n//         this.clearValidationError(\"username\");\n//         this.setState({ flag1: 1});\n//       }\n    \n//       handleChangeEmail = (event) => {\n//         this.setState({ email: event.target.value });\n//         this.clearValidationError(\"email\");\n//         this.setState({ flag2: 1});\n//       }\n    \n//       handleChangePassword = (event) => {\n//         this.setState({ password: event.target.value });\n//         this.clearValidationError(\"password\");\n//         this.setState({ flag3: 1});\n//       }\n      \n//       handleSubmit = (event) => {\n//         if(this.state.username === \"\") {\n//           this.showValidationError(\"username\", \"Username cannot be empty\");\n//         }\n//         if(this.state.email === \"\") {\n//           this.showValidationError(\"email\", \"Email cannot be empty\");\n//         }\n//         if(this.state.password === \"\") {\n//           this.showValidationError(\"password\", \"Password cannot be empty\");\n//         }\n//         console.log(this.state.flag1 && this.state.flag2 && this.state.flag3);\n//         if(this.state.flag1 && this.state.flag2 && this.state.flag3) {\n//           this.setState({ redirect: true});\n//         }\n//         //console.log(this.state);\n//         event.preventDefault();\n//     //     fetch('http://localhost:8000/api/v1/issues/', {\n//     //     method: 'POST',\n//     //     headers: new Headers({\n//     //       'Access-Control-Allow-Origin': '*',\n//     //       'Content-Type': 'application/json',\n//     // }),\n//     //     body: JSON.stringify(this.state)\n//     //   }).then(res => res.json())\n//     //   .then(() => { this.props.history.push('/'); });\n//       }\n\n//       render() {\n//         let usernameErr = null, emailErr = null, passwordErr = null;\n//         for(let err of this.state.errors){\n//           if(err.elm === \"username\") {\n//             usernameErr = err.mssg;\n//           }\n//           if(err.elm === \"email\") {\n//             emailErr = err.mssg;\n//           }\n//           if(err.elm === \"password\") {\n//             passwordErr = err.mssg;\n//           }\n//         }\n//         const redirectToReferrer = this.state.redirect;\n//         if (redirectToReferrer === true) {\n//             return <Redirect to=\"/Memory\" />\n//         }\n//         return (\n//             <form onSubmit={(e) => this.handleSubmit(e)}>\n//               <section>\n//                 Username:\n//                 <input type=\"text\" placeholder=\"User...\" value={this.state.username} onChange={(e) => this.handleChangeUserName(e)} />\n//                 <div>{usernameErr ? usernameErr : \"\"}</div>\n//               </section>\n//               <section>\n//                 Email:\n//                 <input type=\"text\" placeholder=\"Email...\" value={this.state.email} onChange={(e) => this.handleChangeEmail(e)} />\n//                 <div>{emailErr ? emailErr : \"\"}</div>\n//               </section>\n//               <section>\n//                 Password:\n//                 <input type=\"password\" placeholder=\"Password...\" value={this.state.password} onChange={(e) => this.handleChangePassword(e)} />\n//                 <div>{passwordErr ? passwordErr : \"\"}</div>\n//               </section>\n//               <section>\n//                   <button type=\"submit\">Register</button>\n//               </section>\n//             </form>   \n//           )\n//         }\n// }\n\n// export default Login;"]},"metadata":{},"sourceType":"module"}