{"ast":null,"code":"import _objectSpread from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/src/Components/MemoryComponent/MemoryChart.js\";\nimport React, { Component } from 'react';\nimport Memory from './Memory';\nimport NavBar from '../Nav';\nimport '../Chart.css';\nimport openSocket from 'socket.io-client';\nvar socket = openSocket('http://localhost:3000');\n\nvar MemoryChart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MemoryChart, _Component);\n\n  function MemoryChart(props) {\n    var _this;\n\n    _classCallCheck(this, MemoryChart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MemoryChart).call(this, props));\n    _this.state = {\n      lineChartData: {\n        labels: [],\n        datasets: [{\n          type: \"line\",\n          label: \"Memory of System\",\n          backgroundColor: ['orange', 'blue'],\n          borderWidth: \"2\",\n          lineTension: 0.45,\n          percentage: 0,\n          data: []\n        }]\n      },\n      lineChartOptions: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          xAxes: [{\n            ticks: {\n              autoSkip: true,\n              maxTicksLimit: 10\n            }\n          }],\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n              min: 0,\n              max: 15.5\n            }\n          }]\n        }\n      },\n      height: 300,\n      memory: null\n    };\n    return _this;\n  }\n\n  _createClass(MemoryChart, [{\n    key: \"change\",\n    value: function change(memory) {\n      this.setState(function (prevState) {\n        return {\n          memory: memory / (1024 * 1024) / 15.5 * 100\n        };\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      socket.on('info', function (data) {\n        _this2.change(data);\n\n        _this2.setState({\n          percentage: _this2.state.memory\n        });\n\n        var oldDataSet = _this2.state.lineChartData.datasets[0];\n\n        var newDataSet = _objectSpread({}, oldDataSet);\n\n        newDataSet.data.push(_this2.state.memory);\n\n        if (newDataSet.data.length % 8 === 0) {\n          newDataSet.data.shift();\n        }\n\n        var newChartData = _objectSpread({}, _this2.state.lineChartData, {\n          datasets: [newDataSet],\n          labels: _this2.state.lineChartData.labels.concat(new Date().toLocaleTimeString())\n        });\n\n        if (newChartData.labels.length % 8 === 0) {\n          newChartData.labels.shift();\n        }\n\n        _this2.setState({\n          lineChartData: newChartData\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(NavBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"chart_size\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"memory: \", this.state.memory, React.createElement(Memory, {\n        data: this.state.lineChartData,\n        options: this.state.lineChartOptions,\n        height: this.state.height,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return MemoryChart;\n}(Component);\n\nexport default MemoryChart;","map":{"version":3,"sources":["/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/src/Components/MemoryComponent/MemoryChart.js"],"names":["React","Component","Memory","NavBar","openSocket","socket","MemoryChart","props","state","lineChartData","labels","datasets","type","label","backgroundColor","borderWidth","lineTension","percentage","data","lineChartOptions","responsive","maintainAspectRatio","scales","xAxes","ticks","autoSkip","maxTicksLimit","yAxes","beginAtZero","min","max","height","memory","setState","prevState","on","change","oldDataSet","newDataSet","push","length","shift","newChartData","concat","Date","toLocaleTimeString"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Memory from './Memory';\nimport NavBar from '../Nav';\nimport '../Chart.css';\nimport openSocket from 'socket.io-client';\nconst socket = openSocket('http://localhost:3000');\n\nclass MemoryChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lineChartData: {\n        labels: [],\n        datasets: [\n          {\n            type: \"line\",\n            label: \"Memory of System\",\n            backgroundColor: ['orange', 'blue'],\n            borderWidth: \"2\",\n            lineTension: 0.45,\n            percentage: 0,\n            data: []\n          }\n        ]\n      },\n      lineChartOptions: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          xAxes: [\n            {\n              ticks: {\n                autoSkip: true,\n                maxTicksLimit: 10\n              },\n            }\n          ],\n          yAxes: [{\n              ticks: {\n                  beginAtZero:true,\n                  min: 0,\n                  max: 15.5\n              }\n            }]\n         }\n      },\n      height: 300,\n      memory: null\n    };\n  }\n    change(memory) {\n        this.setState(prevState => ({\n          memory:((memory/(1024*1024))/15.5)*100\n        }));\n      }\n\n      componentDidMount() {\n        socket.on('info', data => {\n            this.change(data);\n            this.setState({percentage : this.state.memory})\n            const oldDataSet = this.state.lineChartData.datasets[0];\n            const newDataSet = { ...oldDataSet };\n            newDataSet.data.push(this.state.memory);\n            if(newDataSet.data.length % 8 === 0) {\n              newDataSet.data.shift();\n            }\n            const newChartData = {\n              ...this.state.lineChartData,\n              datasets: [newDataSet],\n              labels: this.state.lineChartData.labels.concat( \n                new Date().toLocaleTimeString()\n              )\n            };\n            if(newChartData.labels.length % 8 === 0) {\n              newChartData.labels.shift();\n            }\n            this.setState({ lineChartData: newChartData });\n          });\n        }\n      render() {\n        return (\n          <div>\n            <NavBar />\n            <div className=\"chart_size\">\n              memory: {this.state.memory}\n              <Memory data={this.state.lineChartData} options={this.state.lineChartOptions} height={this.state.height} />\n            </div>\n          </div>\n        );\n      }\n}\n\nexport default MemoryChart;\n"]},"metadata":{},"sourceType":"module"}