{"ast":null,"code":"import _objectSpread from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/src/Components/changeValue.js\";\nimport React, { Component } from 'react';\nimport Performance from './Performance';\nimport NavBar from './Nav';\nimport openSocket from 'socket.io-client';\nvar socket = openSocket('http://localhost:3000');\n\nvar ChangeValue =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChangeValue, _Component);\n\n  function ChangeValue(props) {\n    var _this;\n\n    _classCallCheck(this, ChangeValue);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChangeValue).call(this, props));\n    _this.state = {\n      lineChartData: {\n        labels: [],\n        datasets: [{\n          type: \"line\",\n          label: \"Performance of System\",\n          backgroundColor: \"rgba(0, 0, 0, 0)\",\n          borderWidth: \"2\",\n          lineTension: 0.45,\n          data: []\n        }]\n      },\n      lineChartOptions: {\n        responsive: true,\n        maintainAspectRatio: false,\n        ticks: {\n          autoSkip: true,\n          maxTicksLimit: 10\n        },\n        scales: {\n          xAxes: [{\n            ticks: {\n              autoSkip: true,\n              maxTicksLimit: 10\n            }\n          }],\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n              min: 0\n            }\n          }]\n        }\n      },\n      width: 500,\n      height: 300,\n      memory: null\n    };\n    return _this;\n  }\n\n  _createClass(ChangeValue, [{\n    key: \"change\",\n    value: function change(memory) {\n      this.setState(function (prevState) {\n        return {\n          memory: memory / (1024 * 1024)\n        };\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      socket.on('info', function (data) {\n        _this2.change(data);\n\n        var oldBtcDataSet = _this2.state.lineChartData.datasets[0];\n\n        var newBtcDataSet = _objectSpread({}, oldBtcDataSet);\n\n        newBtcDataSet.data.pop();\n        newBtcDataSet.data.push(_this2.state.memory);\n\n        var newChartData = _objectSpread({}, _this2.state.lineChartData, {\n          datasets: [newBtcDataSet],\n          labels: _this2.state.lineChartData.labels.concat(new Date().toLocaleTimeString())\n        });\n\n        _this2.setState({\n          lineChartData: newChartData\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(NavBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), \"memory: \", this.state.memory, React.createElement(\"div\", {\n        className: \"col-md-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Performance, {\n        data: this.state.lineChartData,\n        options: this.state.lineChartOptions,\n        width: this.state.width,\n        height: this.state.height,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ChangeValue;\n}(Component);\n\nexport default ChangeValue;","map":{"version":3,"sources":["/home/sanchit_agarwal/rdbAlert/rdbalert/reactcharts/src/Components/changeValue.js"],"names":["React","Component","Performance","NavBar","openSocket","socket","ChangeValue","props","state","lineChartData","labels","datasets","type","label","backgroundColor","borderWidth","lineTension","data","lineChartOptions","responsive","maintainAspectRatio","ticks","autoSkip","maxTicksLimit","scales","xAxes","yAxes","beginAtZero","min","width","height","memory","setState","prevState","on","change","oldBtcDataSet","newBtcDataSet","pop","push","newChartData","concat","Date","toLocaleTimeString"],"mappings":"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","sourcesContent":["\nimport React, {Component} from 'react';\nimport Performance from './Performance';\nimport NavBar from './Nav';\nimport openSocket from 'socket.io-client';\nconst socket = openSocket('http://localhost:3000');\n\nclass ChangeValue extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lineChartData: {\n        labels: [],\n        datasets: [\n          {\n            type: \"line\",\n            label: \"Performance of System\",\n            backgroundColor: \"rgba(0, 0, 0, 0)\",\n            borderWidth: \"2\",\n            lineTension: 0.45,\n            data: []\n          }\n        ]\n      },\n      lineChartOptions: {\n        responsive: true,\n        maintainAspectRatio: false,\n        ticks: {\n          autoSkip: true,\n          maxTicksLimit: 10\n        },\n        scales: {\n          xAxes: [\n            {\n              ticks: {\n                autoSkip: true,\n                maxTicksLimit: 10\n              }\n            }\n          ],\n          yAxes: [{\n              ticks: {\n                  beginAtZero:true,\n                  min: 0,\n              }\n            }]\n         }\n      },\n      width: 500,\n      height: 300,\n      memory: null\n    };\n  }\n    change(memory) {\n        this.setState(prevState => ({\n          memory:memory/(1024*1024)\n        }));\n      }\n\n      componentDidMount() {\n        socket.on('info', data => {\n            this.change(data);\n            const oldBtcDataSet = this.state.lineChartData.datasets[0];\n            const newBtcDataSet = { ...oldBtcDataSet };\n            newBtcDataSet.data.pop();\n            newBtcDataSet.data.push(this.state.memory);\n    \n            const newChartData = {\n              ...this.state.lineChartData,\n              datasets: [newBtcDataSet],\n              labels: this.state.lineChartData.labels.concat(\n                new Date().toLocaleTimeString()\n              )\n            };\n            this.setState({ lineChartData: newChartData });\n        });\n      }\n    \n      render() {\n        return (\n          <div>\n            <NavBar />\n            memory: {this.state.memory}\n            <div className=\"col-md-4\">\n              <Performance data={this.state.lineChartData} options={this.state.lineChartOptions} width={this.state.width} height={this.state.height}/>\n            </div>\n          </div>\n        );\n      }\n}\n\nexport default ChangeValue;\n"]},"metadata":{},"sourceType":"module"}