{"ast":null,"code":"import _toConsumableArray from \"/home/sanchit_agarwal/Desktop/reactcharts/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/sanchit_agarwal/Desktop/reactcharts/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sanchit_agarwal/Desktop/reactcharts/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/sanchit_agarwal/Desktop/reactcharts/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/sanchit_agarwal/Desktop/reactcharts/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/sanchit_agarwal/Desktop/reactcharts/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/sanchit_agarwal/Desktop/reactcharts/src/Components/Login.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Memory from './Memory';\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n\n    _this.handleChangeUserName = function (event) {\n      _this.setState({\n        username: event.target.value\n      });\n    };\n\n    _this.handleChangeEmail = function (event) {\n      _this.setState({\n        email: event.target.value\n      });\n    };\n\n    _this.handleChangePassword = function (event) {\n      _this.setState({\n        password: event.target.value\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      console.log(_this.state);\n\n      if (_this.state.username === \"\") {\n        _this.showValidationError(\"username\", \"Username cannot be empty\");\n      }\n\n      if (_this.state.email === \"\") {\n        _this.showValidationError(\"email\", \"Email cannot be empty\");\n      }\n\n      if (_this.state.password === \"\") {\n        _this.showValidationError(\"password\", \"Password cannot be empty\");\n      }\n\n      event.preventDefault(); //     fetch('http://localhost:8000/api/v1/issues/', {\n      //     method: 'POST',\n      //     headers: new Headers({\n      //       'Access-Control-Allow-Origin': '*',\n      //       'Content-Type': 'application/json',\n      // }),\n      //     body: JSON.stringify(this.state)\n      //   }).then(res => res.json())\n      //   .then(() => { this.props.history.push('/'); });\n    };\n\n    _this.state = {\n      username: '',\n      email: '',\n      password: '',\n      errors: []\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"showValidationError\",\n    value: function showValidationError(elm, mssg) {\n      this.setState(function (prevState) {\n        return {\n          errors: [].concat(_toConsumableArray(prevState.errors), [{\n            elm: elm,\n            mssg: mssg\n          }])\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var usernameErr = null,\n          emailErr = null,\n          passwordErr = null;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.state.errors[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var err = _step.value;\n\n          if (err.elm === \"username\") {\n            usernameErr = err.mssg;\n          }\n\n          if (err.elm === \"email\") {\n            emailErr = err.mssg;\n          }\n\n          if (err.elm === \"password\") {\n            passwordErr = err.mssg;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return React.createElement(\"form\", {\n        onSubmit: function onSubmit(e) {\n          return _this2.handleSubmit(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Username:\", React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"User...\",\n        value: this.state.username,\n        onChange: function onChange(e) {\n          return _this2.handleChangeUserName(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, usernameErr ? usernameErr : \"\")), React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Email:\", React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Email...\",\n        value: this.state.email,\n        onChange: function onChange(e) {\n          return _this2.handleChangeEmail(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, emailErr ? emailErr : \"\")), React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Password:\", React.createElement(\"input\", {\n        type: \"password\",\n        placeholder: \"Password...\",\n        value: this.state.password,\n        onChange: function onChange(e) {\n          return _this2.handleChangePassword(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, passwordErr ? passwordErr : \"\")), React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Register\")));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport default Login;","map":{"version":3,"sources":["/home/sanchit_agarwal/Desktop/reactcharts/src/Components/Login.js"],"names":["React","Component","Link","Memory","Login","props","handleChangeUserName","event","setState","username","target","value","handleChangeEmail","email","handleChangePassword","password","handleSubmit","console","log","state","showValidationError","preventDefault","errors","elm","mssg","prevState","usernameErr","emailErr","passwordErr","err","e"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport Memory from './Memory';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          username: '',\n          email: '',\n          password: '',\n          errors: []\n        }\n    }\n      showValidationError(elm, mssg) {\n        this.setState((prevState) => ( { errors: [...prevState.errors, { elm, mssg} ] }))\n      }\n\n      handleChangeUserName = (event) => {\n        this.setState({ username: event.target.value });\n      }\n    \n      handleChangeEmail = (event) => {\n        this.setState({ email: event.target.value });\n      }\n    \n      handleChangePassword = (event) => {\n        this.setState({ password: event.target.value });\n      }\n      \n      handleSubmit = (event) => {\n        console.log(this.state);\n        if(this.state.username === \"\") {\n          this.showValidationError(\"username\", \"Username cannot be empty\");\n        }\n        if(this.state.email === \"\") {\n          this.showValidationError(\"email\", \"Email cannot be empty\");\n        }\n        if(this.state.password === \"\") {\n          this.showValidationError(\"password\", \"Password cannot be empty\");\n        }\n        event.preventDefault();\n    //     fetch('http://localhost:8000/api/v1/issues/', {\n    //     method: 'POST',\n    //     headers: new Headers({\n    //       'Access-Control-Allow-Origin': '*',\n    //       'Content-Type': 'application/json',\n    // }),\n    //     body: JSON.stringify(this.state)\n    //   }).then(res => res.json())\n    //   .then(() => { this.props.history.push('/'); });\n      }\n\n      render() {\n        let usernameErr = null, emailErr = null, passwordErr = null;\n        for(let err of this.state.errors){\n          if(err.elm === \"username\") {\n            usernameErr = err.mssg;\n          }\n          if(err.elm === \"email\") {\n            emailErr = err.mssg;\n          }\n          if(err.elm === \"password\") {\n            passwordErr = err.mssg;\n          }\n        }\n        return (\n            <form onSubmit={(e) => this.handleSubmit(e)}>\n              <section>\n                Username:\n                <input type=\"text\" placeholder=\"User...\" value={this.state.username} onChange={(e) => this.handleChangeUserName(e)} />\n                <div>{usernameErr ? usernameErr : \"\"}</div>\n              </section>\n              <section>\n                Email:\n                <input type=\"text\" placeholder=\"Email...\" value={this.state.email} onChange={(e) => this.handleChangeEmail(e)} />\n                <div>{emailErr ? emailErr : \"\"}</div>\n              </section>\n              <section>\n                Password:\n                <input type=\"password\" placeholder=\"Password...\" value={this.state.password} onChange={(e) => this.handleChangePassword(e)} />\n                <div>{passwordErr ? passwordErr : \"\"}</div>\n              </section>\n              <section>\n  \n                  <button type=\"submit\">Register</button>\n              </section>\n            </form>   \n          )\n      }\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}